<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
		
	<!-- 클래스 path(base-package)에 있는 클래스들을 스캔하여 @Component가 설정된 클래스들을 자동으로 객체 생성한다. -->
	<!-- @Component 어노테이션이 붙은 클래스들을 일일이 <bean> 엘리먼트로 등록할 필요가 없다. -->
	<context:component-scan base-package="com.hspring.coffeereview.biz"></context:component-scan>
	
	<!-- AOP 관련 어노테이션들을 인식하고 용도에 맞게 처리 -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- DataSource 설정 -->
	<!-- <context:property-placeholder location="classpath:config/database.properties" /> -->
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<property name="driverClassName" value="org.mariadb.jdbc.Driver" />
		<property name="url" value="jdbc:mariadb://localhost:3306/coffee_review" />
		<property name="username" value="sa" />
		<property name="password" value="testsa" />
	</bean>
	
	<!-- 스프링과 JPA 연동 설정 -->
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
	</bean>
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter"></property>
	</bean>
	
	<!-- Transaction 설정 -->
	<bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))" />
		<aop:advisor pointcut-ref="allPointcut" advice-ref="txAdvice" />
	</aop:config>
</beans>
